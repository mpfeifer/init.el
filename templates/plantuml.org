* Sequencz-Diagramm
#+begin_src plantuml :file /home/mpfeifer/Dokumente/sequence1.png
actor Foo1
boundary Foo2
control Foo3
entity Foo4
database Foo5
collections Foo6
Foo1 -> Foo2 : To boundary
Foo1 -> Foo3 : To control
Foo1 -> Foo4 : To entity
Foo1 -> Foo5 : To database
Foo1 -> Foo6 : To collections
#+end_src
#+begin_src plantuml :file /home/mpfeifer/Dokumente/sequence2.png
actor Bob #red
' The only difference between actor
'and participant is the drawing
participant Alice
participant "I have a really\nlong name" as L #99FF99
/' You can also declare:
participant L as "I have a really\nlong name" #99FF99
'/
Alice->Bob: Authentication Request
Bob->Alice: Authentication Response
Bob->L: Log transaction
#+end_src

* AktivitÃ¤tsdiagramm
#+begin_src plantuml :file /home/mpfeifer/Dokumente/activities.png
  (*) --> "First Activity"
  "First Activity" --> (*)

  (*) --> "Second Activity"
  -->[You can put also labels] "Third Activity"
  --> (*)

  (*) -up-> "London"
  -right-> "Paris"
  --> "Berlin"
  -left-> (*)

  (*) --> "Initialization"
  if "In Stimmung" then
          -->[true] "Skifahren"
          --> "Wandern"
          -right-> (*)
  else
          ->[false] "Fernsehen"
          -->[Ending process] (*)
  endif

  (*) --> "check input"
  If "input is verbose" then
          --> [Yes] "turn on verbosity"
          --> "run command"
  else
          --> "run command"

          (*) --> if "Some Test" then
                  -->[true] "activity 1"
                  if "" then
                          -> "activity 3" as a3
                  else
                          if "Other test" then
                                  -left-> "activity 5"
                          else
                                  --> "activity 6"
                          endif
                  endif
          else
                  ->[false] "activity 2"
          endif

(*) --> ===B1===
--> "Parallel Activity 1"
--> ===B2===
===B1=== --> "Parallel Activity 2"
--> ===B2===
--> (*)
#+end_src
#+RESULTS:
[[file:/home/mpfeifer/Dokumente/activities.png]]
#+begin_src plantuml :file /home/mpfeifer/Dokumente/activities2.png
  title Servlet Container
  (*) --> "ClickServlet.handleRequest()"
  --> "new Page"
  if "Page.onSecurityCheck" then
          ->[true] "Page.onInit()"
          if "isForward?" then
                  ->[no] "Process controls"
                  if "continue processing?" then
                          -->[yes] ===RENDERING===
                  else
                          -->[no] ===REDIRECT_CHECK===
                  endif
          else
                  -->[yes] ===RENDERING===
          endif
          if "is Post?" then
                  -->[yes] "Page.onPost()"
                  --> "Page.onRender()" as render
                  --> ===REDIRECT_CHECK===
          else
                  -->[no] "Page.onGet()"
                  --> render
          endif
  else
          -->[false] ===REDIRECT_CHECK===
  endif
  if "Do redirect?" then
          ->[yes] "redirect request"
          --> ==BEFORE_DESTROY===
  else
          if "Do Forward?" then
                  -left->[yes] "Forward request"
                  --> ==BEFORE_DESTROY===
          else
                  -right->[no] "Render page template"
                  --> ==BEFORE_DESTROY===
          endif
  endif
  --> "Page.onDestroy()"
  -->(*)
#+end_src

#+RESULTS:
[[file:/home/mpfeifer/Dokumente/activities2.png]]

* Klassendiagramm
#+begin_src plantuml :file /home/mpfeifer/Dokumente/classes.png
  abstract class AbstractList
  abstract AbstractCollection
  interface List
  interface Collection
  List <|-- AbstractList
  Collection <|-- AbstractCollection
  Collection <|- List
  AbstractCollection <|- AbstractList
  AbstractList <|-- ArrayList
  class ArrayList {
          Object[] elementData
          size()
  }
  enum TimeUnit {
          DAYS
          HOURS
          MINUTES
  }
  annotation SuppressWarnings

  package "Classic Collections" #DDDDDD {
          Object <|-- ArrayList
  }
  package "net sourceforge plantuml" {
          Object <|-- Demo1
          Demo1 *- Demo2
  }

  package foo1 <<Node>> {
          class Class1
  }
  package foo2 <<Rectangle>> {
          class Class2
  }
  package foo3 <<Folder>> {
          class Class3
  }
  package foo4 <<Frame>> {
          class Class4
  }
  package foo5 <<Cloud>> {
          class Class5
  }
  package foo6 <<Database>> {
          class Class6
  }

  foo6 +-- foo5
  foo6 +-- foo4
  foo1 +-- foo2
  foo1 +-- foo3

  set namespaceSeparator ::
  class X1::X2::foo {
          some info
  }
#+end_src

#+RESULTS:
[[file:/home/mpfeifer/Dokumente/classes.png]]

* Objektdiagramm
#+begin_src plantuml :file /home/mpfeifer/Dokumente/objects.png
  object Object01
  object Object02
  object Object03
  object Object04
  object Object05
  object Object06
  object Object07
  object Object08
  object o1
  object o2
  diamond dia
  object o3
  object user

  user : name = "Dummy"
  user : id = 123

  object car {
          model = "Mercedes-Benz"
          type = "A 160"
  }

  Object01 <|-- Object02
  Object03 *-- Object04
  Object05 o-- "4" Object06
  Object07 .. Object08 : some labels

  o1 --> dia
  o2 --> dia
  dia --> o3

  map "Map **Contry => CapitalCity**" as CC {
          UK => London
          USA => Washington
          Germany => Berlin
  }

  map "map: Map<Integer, String>" as users {
          1 => Alice
          2 => Bob
          3 => Charlie
  }

  object London
  object Germany
  object Washington
  object Berlin
  object NewYork
  object UK
  object USA

  map CapitalCies {
          UK *-> London
          USA => Washington
          Germany => Berlin
  }

  map CapitalCities2 {
          UK *-> London
          USA *--> Washington
          Germany *---> Berlin
  }
  NewYork --> CapitalCities2::USA
#+end_src

#+RESULTS:
[[file:/home/mpfeifer/Dokumente/template.png]]
* Mindmap
This is beta and not supported by my local version :-(
#+begin_src plantuml :file /home/mpfeifer/Dokumente/mindmap.png
caption figure 1
title My super title
+ OS
++ Ubuntu
+++ Linux Mint
+++ Kubuntu
+++ Lubuntu
+++ KDE Neon
++ LMDE
++ SolydXK
++ SteamOS
++ Raspbian
-- Windows 95
-- Windows 98
-- Windows NT
--- Windows 8
--- Windows 10
#+end_src
